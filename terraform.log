[0m[1mInitializing the backend...[0m
[0m[1mInitializing provider plugins...[0m
- Reusing previous version of kreuzwerker/docker from the dependency lock file
- Using previously-installed kreuzwerker/docker v2.22.0

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
[0m[1mdocker_image.nginx: Refreshing state... [id=sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eabnginx:latest][0m
[0m[1mdocker_container.nginx: Refreshing state... [id=0cbed35770e8177b133bedac3914c02884846ea3305d83fbec45159ae33be8c5][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
[31m-[0m/[32m+[0m destroy and then create replacement[0m

Terraform will perform the following actions:

[1m  # docker_container.nginx[0m must be [1m[31mreplaced[0m
[0m[31m-[0m/[32m+[0m[0m resource "docker_container" "nginx" {
      [32m+[0m[0m bridge                                      = (known after apply)
      [33m~[0m[0m command                                     = [
          [31m-[0m[0m "nginx",
          [31m-[0m[0m "-g",
          [31m-[0m[0m "daemon off;",
        ] -> (known after apply)
      [32m+[0m[0m container_logs                              = (known after apply)
      [31m-[0m[0m cpu_shares                                  = 0 [90m-> null[0m[0m
      [31m-[0m[0m dns                                         = [] [90m-> null[0m[0m
      [31m-[0m[0m dns_opts                                    = [] [90m-> null[0m[0m
      [31m-[0m[0m dns_search                                  = [] [90m-> null[0m[0m
      [33m~[0m[0m entrypoint                                  = [
          [31m-[0m[0m "/docker-entrypoint.sh",
        ] -> (known after apply)
      [33m~[0m[0m env                                         = [] -> (known after apply)
      [32m+[0m[0m exit_code                                   = (known after apply)
      [33m~[0m[0m gateway                                     = "172.17.0.1" -> (known after apply)
      [31m-[0m[0m group_add                                   = [] [90m-> null[0m[0m
      [33m~[0m[0m hostname                                    = "0cbed35770e8" -> (known after apply)
      [33m~[0m[0m id                                          = "0cbed35770e8177b133bedac3914c02884846ea3305d83fbec45159ae33be8c5" -> (known after apply)
      [33m~[0m[0m image                                       = "sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab" [33m->[0m[0m "nginx:latest" [31m# forces replacement[0m[0m
      [33m~[0m[0m init                                        = false -> (known after apply)
      [33m~[0m[0m ip_address                                  = "172.17.0.2" -> (known after apply)
      [33m~[0m[0m ip_prefix_length                            = 16 -> (known after apply)
      [33m~[0m[0m ipc_mode                                    = "private" -> (known after apply)
      [31m-[0m[0m links                                       = [] [90m-> null[0m[0m
      [33m~[0m[0m log_driver                                  = "json-file" -> (known after apply)
      [31m-[0m[0m log_opts                                    = {} [90m-> null[0m[0m
      [31m-[0m[0m max_retry_count                             = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory                                      = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory_swap                                 = 0 [90m-> null[0m[0m
        name                                        = "nginx-server"
      [33m~[0m[0m network_data                                = [
          [31m-[0m[0m {
              [31m-[0m[0m gateway                   = "172.17.0.1"
              [31m-[0m[0m global_ipv6_prefix_length = 0
              [31m-[0m[0m ip_address                = "172.17.0.2"
              [31m-[0m[0m ip_prefix_length          = 16
              [31m-[0m[0m network_name              = "bridge"
                [90m# (2 unchanged attributes hidden)[0m[0m
            },
        ] -> (known after apply)
      [31m-[0m[0m network_mode                                = "bridge" [90m-> null[0m[0m [31m# forces replacement[0m[0m
      [31m-[0m[0m privileged                                  = false [90m-> null[0m[0m
      [31m-[0m[0m publish_all_ports                           = false [90m-> null[0m[0m
      [33m~[0m[0m runtime                                     = "runc" -> (known after apply)
      [33m~[0m[0m security_opts                               = [] -> (known after apply)
      [33m~[0m[0m shm_size                                    = 64 -> (known after apply)
      [33m~[0m[0m stop_signal                                 = "SIGQUIT" -> (known after apply)
      [33m~[0m[0m stop_timeout                                = 0 -> (known after apply)
      [31m-[0m[0m storage_opts                                = {} [90m-> null[0m[0m
      [31m-[0m[0m sysctls                                     = {} [90m-> null[0m[0m
      [31m-[0m[0m tmpfs                                       = {} [90m-> null[0m[0m
        [90m# (17 unchanged attributes hidden)[0m[0m

      [33m~[0m[0m healthcheck (known after apply)

      [33m~[0m[0m labels (known after apply)

        [90m# (1 unchanged block hidden)[0m[0m
    }

[1mPlan:[0m 1 to add, 0 to change, 1 to destroy.
[0m[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
[0m[1mdocker_image.nginx: Refreshing state... [id=sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eabnginx:latest][0m
[0m[1mdocker_container.nginx: Refreshing state... [id=0cbed35770e8177b133bedac3914c02884846ea3305d83fbec45159ae33be8c5][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
[31m-[0m/[32m+[0m destroy and then create replacement[0m

Terraform will perform the following actions:

[1m  # docker_container.nginx[0m must be [1m[31mreplaced[0m
[0m[31m-[0m/[32m+[0m[0m resource "docker_container" "nginx" {
      [32m+[0m[0m bridge                                      = (known after apply)
      [33m~[0m[0m command                                     = [
          [31m-[0m[0m "nginx",
          [31m-[0m[0m "-g",
          [31m-[0m[0m "daemon off;",
        ] -> (known after apply)
      [32m+[0m[0m container_logs                              = (known after apply)
      [31m-[0m[0m cpu_shares                                  = 0 [90m-> null[0m[0m
      [31m-[0m[0m dns                                         = [] [90m-> null[0m[0m
      [31m-[0m[0m dns_opts                                    = [] [90m-> null[0m[0m
      [31m-[0m[0m dns_search                                  = [] [90m-> null[0m[0m
      [33m~[0m[0m entrypoint                                  = [
          [31m-[0m[0m "/docker-entrypoint.sh",
        ] -> (known after apply)
      [33m~[0m[0m env                                         = [] -> (known after apply)
      [32m+[0m[0m exit_code                                   = (known after apply)
      [33m~[0m[0m gateway                                     = "172.17.0.1" -> (known after apply)
      [31m-[0m[0m group_add                                   = [] [90m-> null[0m[0m
      [33m~[0m[0m hostname                                    = "0cbed35770e8" -> (known after apply)
      [33m~[0m[0m id                                          = "0cbed35770e8177b133bedac3914c02884846ea3305d83fbec45159ae33be8c5" -> (known after apply)
      [33m~[0m[0m image                                       = "sha256:09369da6b10306312cd908661320086bf87fbae1b6b0c49a1f50ba531fef2eab" [33m->[0m[0m "nginx:latest" [31m# forces replacement[0m[0m
      [33m~[0m[0m init                                        = false -> (known after apply)
      [33m~[0m[0m ip_address                                  = "172.17.0.2" -> (known after apply)
      [33m~[0m[0m ip_prefix_length                            = 16 -> (known after apply)
      [33m~[0m[0m ipc_mode                                    = "private" -> (known after apply)
      [31m-[0m[0m links                                       = [] [90m-> null[0m[0m
      [33m~[0m[0m log_driver                                  = "json-file" -> (known after apply)
      [31m-[0m[0m log_opts                                    = {} [90m-> null[0m[0m
      [31m-[0m[0m max_retry_count                             = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory                                      = 0 [90m-> null[0m[0m
      [31m-[0m[0m memory_swap                                 = 0 [90m-> null[0m[0m
        name                                        = "nginx-server"
      [33m~[0m[0m network_data                                = [
          [31m-[0m[0m {
              [31m-[0m[0m gateway                   = "172.17.0.1"
              [31m-[0m[0m global_ipv6_prefix_length = 0
              [31m-[0m[0m ip_address                = "172.17.0.2"
              [31m-[0m[0m ip_prefix_length          = 16
              [31m-[0m[0m network_name              = "bridge"
                [90m# (2 unchanged attributes hidden)[0m[0m
            },
        ] -> (known after apply)
      [31m-[0m[0m network_mode                                = "bridge" [90m-> null[0m[0m [31m# forces replacement[0m[0m
      [31m-[0m[0m privileged                                  = false [90m-> null[0m[0m
      [31m-[0m[0m publish_all_ports                           = false [90m-> null[0m[0m
      [33m~[0m[0m runtime                                     = "runc" -> (known after apply)
      [33m~[0m[0m security_opts                               = [] -> (known after apply)
      [33m~[0m[0m shm_size                                    = 64 -> (known after apply)
      [33m~[0m[0m stop_signal                                 = "SIGQUIT" -> (known after apply)
      [33m~[0m[0m stop_timeout                                = 0 -> (known after apply)
      [31m-[0m[0m storage_opts                                = {} [90m-> null[0m[0m
      [31m-[0m[0m sysctls                                     = {} [90m-> null[0m[0m
      [31m-[0m[0m tmpfs                                       = {} [90m-> null[0m[0m
        [90m# (17 unchanged attributes hidden)[0m[0m

      [33m~[0m[0m healthcheck (known after apply)

      [33m~[0m[0m labels (known after apply)

        [90m# (1 unchanged block hidden)[0m[0m
    }

[1mPlan:[0m 1 to add, 0 to change, 1 to destroy.
[0m[0m[1mdocker_container.nginx: Destroying... [id=0cbed35770e8177b133bedac3914c02884846ea3305d83fbec45159ae33be8c5][0m[0m
[0m[1mdocker_container.nginx: Destruction complete after 1s[0m
[0m[1mdocker_container.nginx: Creating...[0m[0m
[0m[1mdocker_container.nginx: Creation complete after 1s [id=416b7408b3110986efb0f8104a26a1f6be49dd27ca110887147d2de731a99437][0m
[0m[1m[32m
Apply complete! Resources: 1 added, 0 changed, 1 destroyed.
[0m